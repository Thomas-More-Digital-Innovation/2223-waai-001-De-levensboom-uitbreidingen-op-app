{
    "openapi": "3.0.0",
    "info": {
        "title": "Waaiburg API",
        "description": "Waaiburg API Documentation",
        "version": "1.0.0"
    },
    "paths": {
        "/api/answers": {
            "get": {
                "tags": ["answers"],
                "summary": "Get list of answers",
                "description": "Returns list of answers",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "answers": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Answer"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["answers"],
                "summary": "Create new answer",
                "description": "Create new answer",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Answer"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Answer created succesfully"
                                        },
                                        "answer": {
                                            "$ref": "#/components/schemas/Answer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/answers/{id}": {
            "delete": {
                "tags": ["answers"],
                "summary": "Delete answer",
                "description": "Delete answer",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of answer to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Answer deleted succesfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": ["answers"],
                "summary": "Update answer",
                "description": "Update answer",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of answer to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Answer"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Answer updated succesfully"
                                        },
                                        "answer": {
                                            "$ref": "#/components/schemas/Answer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/departments": {
            "get": {
                "tags": ["departments"],
                "summary": "Get list of departments",
                "description": "Returns list of departments",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "departments": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Department"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["departments"],
                "summary": "Create a new department",
                "description": "Returns the department data",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Department"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Department created succesfully"
                                        },
                                        "department": {
                                            "$ref": "#/components/schemas/Department"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/departments/{id}": {
            "delete": {
                "tags": ["departments"],
                "summary": "Delete an existing department",
                "description": "Returns the department data",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of department to return",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Department deleted succesfully"
                                        },
                                        "department": {
                                            "$ref": "#/components/schemas/Department"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": ["departments"],
                "summary": "Update an existing department",
                "description": "Returns the department data",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of department to return",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Department"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Department updated succesfully"
                                        },
                                        "department": {
                                            "$ref": "#/components/schemas/Department"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/department-list": {
            "get": {
                "tags": ["departmentlists"],
                "summary": "Get list of department list",
                "description": "Returns list of department list",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "departmentList": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/DepartmentList"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["departmentlists"],
                "summary": "Create new department list",
                "description": "Create new department list",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DepartmentList"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Department List created succesfully"
                                        },
                                        "departmentList": {
                                            "$ref": "#/components/schemas/DepartmentList"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/department-list/{id}": {
            "delete": {
                "tags": ["departmentlists"],
                "summary": "Delete department list",
                "description": "Delete department list",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Department List ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Department List deleted succesfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": ["departmentlists"],
                "summary": "Update department list",
                "description": "Update department list",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Department List ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DepartmentList"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Department List updated succesfully"
                                        },
                                        "departmentList": {
                                            "$ref": "#/components/schemas/DepartmentList"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/info-content": {
            "get": {
                "tags": ["infocontents"],
                "summary": "Get list of info content",
                "description": "Returns list of info content",
                "operationId": "infoContentIndex",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {token}",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "infoContents": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/InfoContent"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "post": {
                "tags": ["infocontents"],
                "summary": "Create info content",
                "description": "Create info content",
                "operationId": "infoContentStore",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {token}",
                        "required": true
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InfoContent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Info content created succesfully"
                                        },
                                        "infoContent": {
                                            "$ref": "#/components/schemas/InfoContent"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/info-content/{id}": {
            "delete": {
                "tags": ["infocontents"],
                "summary": "Delete info content",
                "description": "Delete info content",
                "operationId": "infoContentDelete",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {token}",
                        "required": true
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Info content id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Info content deleted succesfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "patch": {
                "tags": ["infocontents"],
                "summary": "Update info content",
                "description": "Update info content",
                "operationId": "infoContentUpdate",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {token}",
                        "required": true
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Info content id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InfoContent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Info content updated succesfully"
                                        },
                                        "infoContent": {
                                            "$ref": "#/components/schemas/InfoContent"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/info": {
            "get": {
                "tags": ["infos"],
                "summary": "Get list of info",
                "description": "Returns list of info",
                "operationId": "infoIndex",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {token}",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "info's": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Info"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "post": {
                "tags": ["infos"],
                "summary": "Create info",
                "description": "Create info",
                "operationId": "infoStore",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {token}",
                        "required": true
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Info"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Info created succesfully"
                                        },
                                        "info": {
                                            "$ref": "#/components/schemas/Info"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/info/{id}": {
            "delete": {
                "tags": ["infos"],
                "summary": "Delete info",
                "description": "Delete info",
                "operationId": "infoDelete",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {token}",
                        "required": true
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Info id",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Info deleted succesfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/questions": {
            "get": {
                "tags": ["questions"],
                "summary": "Get list of questions",
                "description": "Returns list of questions",
                "operationId": "questionsIndex",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {token}",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "questions": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Question"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "post": {
                "tags": ["questions"],
                "summary": "Create new question",
                "description": "Create new question",
                "operationId": "questionsStore",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {token}",
                        "required": true
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Question"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "question": {
                                            "$ref": "#/components/schemas/Question"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/questions/{id}": {
            "delete": {
                "tags": ["questions"],
                "summary": "Delete question",
                "description": "Delete question",
                "operationId": "questionsDestroy",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {token}",
                        "required": true
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Question id",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "question": {
                                            "$ref": "#/components/schemas/Question"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "patch": {
                "tags": ["questions"],
                "summary": "Update question",
                "description": "Update question",
                "operationId": "questionsUpdate",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {token}",
                        "required": true
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Question id",
                        "required": true
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Question"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "question": {
                                            "$ref": "#/components/schemas/Question"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/roles": {
            "get": {
                "tags": ["roles"],
                "summary": "Get list of roles",
                "description": "Returns list of roles",
                "operationId": "rolesIndex",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {token}",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "roles": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Role"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["roles"],
                "summary": "Create a new role",
                "description": "Returns the created role",
                "operationId": "rolesStore",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {token}",
                        "required": true
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Role"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Role created succesfully"
                                        },
                                        "role": {
                                            "$ref": "#/components/schemas/Role"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/roles/{id}": {
            "delete": {
                "tags": ["roles"],
                "summary": "Delete a role",
                "description": "Returns the deleted role",
                "operationId": "rolesDelete",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {token}",
                        "required": true
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Role id",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Role deleted succesfully"
                                        },
                                        "role": {
                                            "$ref": "#/components/schemas/Role"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": ["roles"],
                "summary": "Update a role",
                "description": "Returns the updated role",
                "operationId": "rolesUpdate",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {token}",
                        "required": true
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Role id",
                        "required": true
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Role"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Role updated succesfully"
                                        },
                                        "role": {
                                            "$ref": "#/components/schemas/Role"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/sections": {
            "get": {
                "tags": ["sections"],
                "summary": "Get list of sections",
                "description": "Returns list of sections",
                "operationId": "sectionsIndex",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {token}",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "sections": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Section"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["sections"],
                "summary": "Create a new section",
                "description": "Returns the created section",
                "operationId": "sectionsStore",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Section"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Section created succesfully"
                                        },
                                        "section": {
                                            "$ref": "#/components/schemas/Section"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/sections/{id}": {
            "delete": {
                "tags": ["sections"],
                "summary": "Delete a section",
                "description": "Returns the deleted section",
                "operationId": "sectionsDestroy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of section to return",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Section deleted succesfully"
                                        },
                                        "section": {
                                            "$ref": "#/components/schemas/Section"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": ["sections"],
                "summary": "Update a section",
                "description": "Returns the updated section",
                "operationId": "sectionsUpdate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of section to return",
                        "required": true
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Section"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Section updated succesfully"
                                        },
                                        "section": {
                                            "$ref": "#/components/schemas/Section"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users": {
            "get": {
                "tags": ["users"],
                "summary": "Get list of users",
                "description": "Returns list of users",
                "operationId": "usersIndex",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {token}",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "users": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/User"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["users"],
                "summary": "Create new user",
                "description": "Create new user",
                "operationId": "usersStore",
                "requestBody": {
                    "description": "Pass user data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User created succesfully"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/{id}": {
            "delete": {
                "tags": ["users"],
                "summary": "Delete existing user",
                "description": "Delete existing user",
                "operationId": "usersDestroy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of user to return",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User deleted succesfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": ["users"],
                "summary": "Update existing user",
                "description": "Update existing user",
                "operationId": "usersUpdate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of user to return",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User updated succesfully"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/userTypes": {
            "get": {
                "tags": ["userTypes"],
                "summary": "Get list of userTypes",
                "description": "Returns list of userTypes",
                "operationId": "userTypesIndex",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {token}",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "userTypes": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/UserType"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["userTypes"],
                "summary": "Create a new userType",
                "description": "Returns the created userType",
                "operationId": "userTypesStore",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User type created succesfully"
                                        },
                                        "userType": {
                                            "$ref": "#/components/schemas/UserType"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/userTypes/{id}": {
            "delete": {
                "tags": ["userTypes"],
                "summary": "Delete an existing userType",
                "description": "Returns the deleted userType",
                "operationId": "userTypesDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of userType to return",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User type deleted succesfully"
                                        },
                                        "userType": {
                                            "$ref": "#/components/schemas/UserType"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": ["userTypes"],
                "summary": "Update an existing userType",
                "description": "Returns the updated userType",
                "operationId": "userTypesUpdate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of userType to return",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User type updated succesfully"
                                        },
                                        "userType": {
                                            "$ref": "#/components/schemas/UserType"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Answer": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "question_id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "answer": {
                        "type": "string",
                        "example": "Answer 1"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2021-05-12 12:00:00"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2021-05-12 12:00:00"
                    }
                },
                "type": "object"
            },
            "Auth": {
                "properties": {
                    "user_type_id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "firstname": {
                        "type": "string",
                        "example": "John"
                    },
                    "surname": {
                        "type": "string",
                        "example": "Doe"
                    },
                    "email": {
                        "type": "string",
                        "example": "email"
                    },
                    "password": {
                        "type": "string",
                        "example": "password"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2021-05-01 12:00:00"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2021-05-01 12:00:00"
                    }
                },
                "type": "object"
            },
            "Department": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Department 1"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2021-05-01 12:00:00"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2021-05-01 12:00:00"
                    }
                },
                "type": "object"
            },
            "DepartmentList": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Department 1"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2021-05-01 12:00:00"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2021-05-01 12:00:00"
                    }
                },
                "type": "object"
            },
            "InfoContent": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "info_id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "title": {
                        "type": "string",
                        "example": "Title 1"
                    },
                    "description": {
                        "type": "string",
                        "example": "Description 1"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2021-05-01 12:00:00"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2021-05-01 12:00:00"
                    }
                },
                "type": "object"
            },
            "Info": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Info 1"
                    },
                    "description": {
                        "type": "string",
                        "example": "Description 1"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2021-05-01 12:00:00"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2021-05-01 12:00:00"
                    }
                },
                "type": "object"
            },
            "Question": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "question": {
                        "type": "string",
                        "example": "Question 1"
                    },
                    "answer": {
                        "type": "string",
                        "example": "Answer 1"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2021-05-01 12:00:00"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2021-05-01 12:00:00"
                    }
                },
                "type": "object"
            },
            "Role": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Role 1"
                    },
                    "description": {
                        "type": "string",
                        "example": "Role 1"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2021-05-01 12:00:00"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2021-05-01 12:00:00"
                    }
                },
                "type": "object"
            },
            "Section": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Section 1"
                    },
                    "description": {
                        "type": "string",
                        "example": "Section 1"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2021-05-01 12:00:00"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2021-05-01 12:00:00"
                    }
                },
                "type": "object"
            },
            "User": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "user_type_id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "firstname": {
                        "type": "string",
                        "example": "John"
                    },
                    "surname": {
                        "type": "string",
                        "example": "Doe"
                    },
                    "email": {
                        "type": "string",
                        "example": "john.doe@email.com"
                    },
                    "password": {
                        "type": "string",
                        "example": "password"
                    },
                    "phoneNumber": {
                        "type": "string",
                        "example": "0612345678"
                    },
                    "gender": {
                        "type": "string",
                        "example": "Man"
                    },
                    "street": {
                        "type": "string",
                        "example": "street"
                    },
                    "houseNumber": {
                        "type": "string",
                        "example": "1"
                    },
                    "city": {
                        "type": "string",
                        "example": "city"
                    },
                    "zipcode": {
                        "type": "string",
                        "example": "1234AB"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2021-05-12 12:00:00"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2021-05-12 12:00:00"
                    }
                },
                "type": "object"
            },
            "UserType": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Admin"
                    },
                    "description": {
                        "type": "string",
                        "example": "Admin"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2021-01-01 00:00:00"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2021-01-01 00:00:00"
                    }
                },
                "type": "object"
            }
        },
        "responses": {
            "200": {
                "description": "successful operation",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Info updated succesfully"
                                },
                                "info": {
                                    "$ref": "#/components/schemas/Info"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "401": {
                "description": "Unauthorized"
            }
        },
        "parameters": {
            "Authorization": {
                "name": "Authorization",
                "in": "header",
                "description": "Bearer {token}",
                "required": true
            },
            "id": {
                "name": "id",
                "in": "path",
                "description": "Info id",
                "required": true
            }
        },
        "requestBodies": {
            "Info": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Info"
                        }
                    }
                }
            }
        },
        "securitySchemes": {
            "passport": {
                "type": "apiKey",
                "description": "Laravel passport oauth2 security.",
                "in": "header",
                "scheme": "https",
                "flows": {
                    "password": {
                        "authorizationUrl": "http://localhost/oauth/authorize",
                        "tokenUrl": "http://localhost/oauth/token",
                        "refreshUrl": "http://localhost/token/refresh",
                        "scopes": []
                    }
                }
            },
            "sanctum": {
                "type": "apiKey",
                "description": "Enter token in format (Bearer <token>)",
                "name": "Authorization",
                "in": "header"
            }
        }
    },
    "tags": [
        {
            "name": "users",
            "description": "API Endpoints of Projects"
        },
        {
            "name": "userTypes",
            "description": "API Endpoints of userTypes"
        },
        {
            "name": "sections",
            "description": "API Endpoints of sections"
        },
        {
            "name": "roles",
            "description": "API Endpoints of roles"
        },
        {
            "name": "questions",
            "description": "API Endpoints of questions"
        },
        {
            "name": "infos",
            "description": "API Endpoints of infos"
        },
        {
            "name": "infocontents",
            "description": "API Endpoints of infocontents"
        },
        {
            "name": "departmentlists",
            "description": "API Endpoints of departmentlists"
        },
        {
            "name": "departments",
            "description": "API Endpoints of departments"
        },
        {
            "name": "auths",
            "description": "API Endpoints of auths"
        },
        {
            "name": "answers",
            "description": "API Endpoints of answers"
        }
    ]
}
